# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

{
    'includes': [
        'custom/custom.gypi',
        '../../modules/dart/generated.gypi',
        'dart-native-extensions.gypi',
    ],
    'variables': {
        'bindings_core_dart_dir': '.',
        'bindings_core_dart_files': [
            '<@(bindings_core_dart_custom_files)',
            'DartApplicationLoader.cpp',
            'DartApplicationLoader.h',
            'DartCallback.cpp',
            'DartCallback.h',
            'DartBindingsCommonIncludes.h',
            'DartController.cpp',
            'DartController.h',
            'DartCustomElementBinding.cpp',
            'DartCustomElementBinding.h',
            'DartCustomElementConstructorBuilder.cpp',
            'DartCustomElementConstructorBuilder.h',
            'DartCustomElementLifecycleCallbacks.cpp',
            'DartCustomElementLifecycleCallbacks.h',
            'DartCustomElementWrapper.cpp',
            'DartCustomElementWrapper.h',
            'DartScriptDebugServer.cpp',
            'DartScriptDebugServer.h',
            'DartDOMData.cpp',
            'DartDOMData.h',
            'DartDOMWrapper.cpp',
            'DartDOMWrapper.h',
            'DartEventListener.cpp',
            'DartEventListener.h',
            'DartExceptionState.h',
            'DartExceptionState.cpp',
            'DartGCController.cpp',
            'DartGCController.h',
            'DartHandleProxy.cpp',
            'DartHandleProxy.h',
            'DartInjectedScriptHostHelper.cpp',
            'DartInjectedScriptHostHelper.h',
            'DartInjectedScript.cpp',
            'DartInjectedScript.h',
            'DartInjectedScriptManager.cpp',
            'DartInjectedScriptManager.h',
            'DartInspectorTimeline.h',
            'DartInspectorConsoleMessage.h',
            'DartInspectorConsoleMessage.cpp',
            'DartInspectorDebuggerAgent.h',
            'DartInspectorDebuggerAgent.cpp',
            'DartInspectorRuntimeAgent.h',
            'DartInspectorRuntimeAgent.cpp',
            'DartIsolateDestructionObserver.cpp',
            'DartIsolateDestructionObserver.h',
            'DartJsInterop.h',
            'DartJsInterop.cpp',
            'DartJsInteropData.h',
            'DartJsInteropData.cpp',
            'DartMutationCallback.cpp',
            'DartMutationCallback.h',
            'DartNativeUtilities.cpp',
            'DartNativeUtilities.h',
            'DartPageDebuggerAgent.cpp',
            'DartPageDebuggerAgent.h',
            'DartScheduledAction.cpp',
            'DartScheduledAction.h',
            'DartScriptDebugListener.h',
            'DartScriptPromise.cpp',
            'DartScriptPromise.h',
            'DartScriptPromiseResolver.cpp',
            'DartScriptPromiseResolver.h',
            'DartScriptState.cpp',
            'DartScriptState.h',
            'DartScriptValue.cpp',
            'DartScriptValue.h',
            'DartPersistentValue.cpp',
            'DartPersistentValue.h',
            'DartService.cpp',
            'DartService.h',
            'DartStringCache.cpp',
            'DartStringCache.h',
            'DartUtilities.cpp',
            'DartUtilities.h',
            'ThreadSafeDartIsolateWrapper.cpp',
            'ThreadSafeDartIsolateWrapper.h',
            'V8Converter.cpp',
            'V8Converter.h',
            # FIXMEDART: These don't really belong here.  But where?
            # FIXMEDART: Add these back when generated as well as the
            # blink_DartResolver.cpp.
            'DartSnapshot.bytes',
        ],
        'conditions': [
            ['enable_dart_native_extensions==1', {
                'bindings_core_dart_files': [
                    'shared_lib/DartNativeExtensions.cpp',
                    'shared_lib/DartNativeExtensions.h',
                    'shared_lib/DartNativeExtensionsPosix.cpp',
                    'shared_lib/DartNativeExtensionsWin.cpp',
                ],
            }],
        ],
        # FIXMEDART: Add unittests!
        'bindings_core_dart_unittest_files': [
        ],
    },
}
