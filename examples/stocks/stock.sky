<!--
// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
-->
<import src="/sky/framework/sky-element.sky" />

<sky-element>
<template>
  <style>
  :host {
    // TODO(eseidel): Why does setting height here make this too big?
    // height: 48px;
    max-height: 48px;
    display: flex;
    border-bottom: 1px solid #F4F4F4;
    padding-top: 16px;
    padding-left: 16px;
    padding-right: 16px;
    padding-bottom: 20px;
  }
  #ticker {
    flex-grow: 1;
  }
  #last-sale {
    padding-right: 20px;
  }
  #change {
    border-radius: 5px;
    min-width: 72px;
    padding: 2px;
    padding-right: 10px;
    text-align: right;
  }
  </style>
  <div id="ticker" />
  <div id="last-sale" />
  <div id="change" />
</template>
<script>
import "dart:sky";
import "dart:math";

List<String> redColors = [
  '#FFEBEE',
  '#FFCDD2',
  '#EF9A9A',
  '#E57373',
  '#EF5350',
  '#F44336',
  '#E53935',
  '#D32F2F',
  '#C62828',
  '#B71C1C',
];

List<String> greenColors = [
  '#E8F5E9',
  '#C8E6C9',
  '#A5D6A7',
  '#81C784',
  '#66BB6A',
  '#4CAF50',
  '#43A047',
  '#388E3C',
  '#2E7D32',
  '#1B5E20',
];

int colorIndexForPercentChange(double percentChange) {
  // Currently the max is 10%.
  double maxPercent = 10.0;
  return max(0, ((percentChange.abs() / maxPercent) * greenColors.length).floor());
}

String colorForPercentChange(double percentChange) {
  if (percentChange > 0)
    return greenColors[colorIndexForPercentChange(percentChange)];
  return redColors[colorIndexForPercentChange(percentChange)];
}

@Tagname('stock')
class Stock extends SkyElement {
  var model; // model.Stock

  void shadowRootReady() {
    shadowRoot.getElementById('ticker').textContent = model.symbol;

    Element lastSale = shadowRoot.getElementById('last-sale');
    lastSale.textContent = "\$${model.lastSale.toStringAsFixed(2)}";

    Element change = shadowRoot.getElementById('change');
    String changeString = "${model.percentChange.toStringAsFixed(2)}%";
    if (model.percentChange > 0)
      changeString = "+" + changeString;
    change.textContent = changeString;
    change.style['background-color'] = colorForPercentChange(model.percentChange);
  }
}

_init(script) => register(script, Stock);
</script>
</sky-element>
