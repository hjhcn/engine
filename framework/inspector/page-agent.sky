<import src="/sky/framework/xmlhttprequest.sky" as="XMLHttpRequest" />
<script>
function Page(delegate) {
  this.delegate_ = delegate;
}

Page.prototype.enable = function() {
};

Page.prototype.canScreencast = function() {
  return {
    result: false
  };
};

Page.prototype.canEmulate = function() {
  return {
    result: false
  };
};

Page.prototype.getResourceContent = function(params, message_id) {
  var request = new XMLHttpRequest;
  request.onload = function() {
    var message = {
      'content' : request.responseText,
    };
    this.delegate_.sendResponse(message_id, message);
  }.bind(this);
  request.open("GET", params.url);
  request.send();

  return this.delegate_.ASYNC_RESPONSE;
};

Page.prototype.getResourceTree = function() {
  // Unclear if this is all needed, but if we don't return something here
  // the inspector hits an exception in WebInspector.ResourceTreeModel.
  return {
    "frameTree": {
      "frame": {
        "id": "1",
        "loaderId": "1",
        "url": document.URL,
        "mimeType": "text/html",
        "securityOrigin": document.URL,
      },
      "resources": [], // FIXME
    }
  };
};

module.exports = Page;
</script>
