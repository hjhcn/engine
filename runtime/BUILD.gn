# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//mojo/dart/embedder/embedder.gni")

vmservice_sources_gypi =
  exec_script("//build/gypi_to_gn.py",
      [ rebase_path("//dart/runtime/bin/vmservice/vmservice_sources.gypi") ],
      "scope",
      [ rebase_path("//dart/runtime/bin/vmservice/vmservice_sources.gypi") ])

dart_embedder_resources("gen_embedded_resources_cc") {
  inputs = rebase_path(vmservice_sources_gypi.sources,
                       "",
                       "//dart/runtime/bin/vmservice")
  root_prefix = "//dart/runtime/bin/"
  output = "$target_gen_dir/embedded_resources.cc"
  table_name = "flutter_embedded_service_isolate"
}

source_set("embedded_resources_cc") {
  sources = [ "$target_gen_dir/embedded_resources.cc" ]
  deps = [ ":gen_embedded_resources_cc" ]
}

source_set("runtime") {
  sources = [
    "dart_controller.cc",
    "dart_controller.h",
    "dart_init.cc",
    "dart_init.h",
    "dart_service_isolate.cc",
    "dart_service_isolate.h",
    "embedder_resources.cc",
    "embedder_resources.h",
    "sky_view.cc",
    "sky_view_client.cc",
    "sky_view_client.h",
    "sky_view.h",
    "start_up.cc",
    "start_up.h",
  ]

  deps = [
    ":embedded_resources_cc",
    "//dart/runtime:libdart",
    "//dart/runtime/bin:embedded_dart_io",
    "//flutter/assets",
    "//flutter/common",
    "//flutter/flow",
    "//flutter/glue",
    "//flutter/lib/io",
    "//flutter/lib/mojo",
    "//flutter/lib/ui",
    "//flutter/services/engine:interfaces",
    "//flutter/services/pointer:interfaces",
    "//flutter/skia",
    "//lib/ftl",
    "//lib/tonic",
    "//lib/tonic/debugger",
    "//mojo/public/platform/dart:mojo_internal_impl",
  ]

  if (is_android) {
    deps += [
      "//flutter/lib/jni",
    ]
  }

  # On iOS (device), precompiled snapshots contain the instruction buffer.
  # Generation of the same requires all application specific script code to be
  # specified up front. In such cases, there can be no generic snapshot.
  if (!is_ios || use_ios_simulator) {
    deps += [
      "//flutter/lib/snapshot",
    ]
  }
}
