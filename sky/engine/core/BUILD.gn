# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//sky/engine/core/core.gni")
import("//mojo/dart/embedder/embedder.gni")

visibility = [ "//sky/engine/*", "//sky/shell/*" ]

source_set("libraries") {
  public_deps = [
    "//base",
    "//flow",
    "//flutter/lib/ui",
    "//flutter/tonic",
    "//glue",
    "//lib/ftl",
    "//mojo/application",
    "//mojo/data_pipe_utils",
    "//mojo/public/c/system",
    "//mojo/public/cpp/bindings",
    "//mojo/public/cpp/system",
    "//mojo/public/cpp/utility",
    "//mojo/public/interfaces/application",
    "//mojo/public/platform/dart:mojo_internal_impl",
    "//skia",
    "//sky/engine/wtf",
    "//third_party/iccjpeg",
    "//third_party/libpng",
    "//third_party/qcms",
    "//third_party/zlib",
  ]

  if (is_android) {
    public_deps += [
      "//flutter/lib/jni",
    ]
  }
}

source_set("prerequisites") {
  deps = [
    ":libraries",
    "//sky/engine/platform",
  ]

  forward_dependent_configs_from = [ ":libraries" ]

  direct_dependent_configs = [
    "//sky/engine:config",
    "//sky/engine:inside_blink",
    "//build/config/compiler:wexit_time_destructors",
  ]
}

vmservice_sources_gypi =
  exec_script("//build/gypi_to_gn.py",
      [ rebase_path("//dart/runtime/bin/vmservice/vmservice_sources.gypi") ],
      "scope",
      [ rebase_path("//dart/runtime/bin/vmservice/vmservice_sources.gypi") ])

dart_embedder_resources("generate_sky_embedder_service_isolate_resources_cc") {
  inputs = rebase_path(vmservice_sources_gypi.sources,
                       "",
                       "//dart/runtime/bin/vmservice")
  root_prefix = "//dart/runtime/bin/"
  output = "$target_gen_dir/sky_embedder_service_isolate_resources.cc"
  table_name = "sky_embedder_service_isolate"
}

static_library("core") {
  output_name = "sky_core"

  deps = [
    ":generate_sky_embedder_service_isolate_resources_cc",
    ":libraries",
    ":prerequisites",
    "//services/asset_bundle:lib",
    "//sky/engine/platform",
    "//sky/engine/bindings",
    "//sky/services/engine:interfaces",
    "//sky/services/pointer:interfaces",
    "//dart/runtime/bin:embedded_dart_io",
    "//dart/runtime:libdart",
    "//dart/runtime/vm:libdart_platform",
    "//mojo/services/asset_bundle/interfaces:interfaces",
    "//mojo/services/navigation/interfaces",
  ]

  if (!flutter_product_mode) {
    # Only include observatory assets in non-product modes.
    deps += [
      "//dart/runtime/observatory:embedded_observatory_archive",
    ]
  }

  sources = sky_core_files

  sources += [ "$target_gen_dir/sky_embedder_service_isolate_resources.cc" ]

  include_dirs = [
    # Needed for dart_mirrors_api.h in dart_controller.cc
    rebase_path("//dart/runtime"),
  ]

  forward_dependent_configs_from = [ ":libraries" ]

  # core and core_generated are really the same thing.
  allow_circular_includes_from = [
    "//sky/engine/bindings",
  ]
}
